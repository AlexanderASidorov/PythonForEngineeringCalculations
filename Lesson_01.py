# -*- coding: utf-8 -*-
"""
Created on Wed Sep  7 12:33:17 2022

@author: sidorow
"""
"""
Почему именно Python?
1. Достаточно простой язык, не требующий компиляции (т.н. сценарный или скриптовый);
2. Имеет множество уже написанных и свободно распростроняемых библиотек, для 
решения тех или иных задач;
3. Имеет множество документации по работе с данными и решения инженерных задач;
4. В отличии, например, от MatLab полностью бесплатный со множеством свободно-
распространяемых сред разработки

В рамках нашего курса мы будем изучать только то, что необходимо нам для 
решения конкретных инженерных задач:
расчет механических свойств материала, апроксимация данных по сопротивлению 
деформации и т.д.
Более глубоко вы можете изучить Python по специализированной литературе,
например Python для сложных задач. Наука о данных и машинное обучение.
Автор Дж. Вандер Плас
или выбрав и интернете один из множества видео курсов, в частоности:
https://www.youtube.com/watch?v=aoL3whRmSfc&list=PLL0SWcFqypCmkHClksnGlab3wglEVMqNN
https://www.youtube.com/c/PythonEngineer/featured
несколько курсов есть на coursera.org
ну и не забываем про официальные tutorials docs.python.org и tutorials основных 
библиотек, с которыми мы будем работать:
Библиотека NumPy (Numerical Python) https://numpy.org
Библиотека Pandas (для работы с многомерными массивами) https://pandas.pydata.org
Библиотека Matplotlib (для построения графиков и прочей визуализации данных) 
https://matplotlib.org

Python - язык императивного программирования, т.е. вы фактически пишите 
компьютеру ряд инструкций (команд), которые он последовательно выполняет.
Программа на языке Python фактически представляет собой скрипт (текстовый файл) 
с расширением .py

Давайте создадим простейший такой скрипт:
Решение линецного  y=kx+b
"""
print ('Решение линейного уравнения')
print ('Введите k')
# просим пользователя ввести коэфициент k, типа float (число c плавающей запятой)
k=float(input())
# тоже самое для b
print ('Введите b')
b=float(input())
# В общем случае корень уравнения находится как x=-b/k
# Но если k и b будут равны 0, то это уравнение будет иметь бесконечное 
# множествто решений
# Этот случай описывается как
if k==0 and b==0:
    print ('Бесконечное количество корней')
# Если 0 равно только k, то кореней это уравнение не будет иметь совсем
elif k==0:
    print ('Уравнение корней не имеет')
# во всех остальных случаях корень ищем по вышепреведенной формуле
else:
    x=-b/k
    print ('x=', x)
#
#
#%%
"""
Самая первая библиотека, которая нам понабобится это библиотека Math. 
Она хранит в себе все математические функции, которыми мы пользуемся в 
инженерных расчетах. Если мы в данные момент, не импортировав эту библиотеку в 
консоле попробуем задать команду cos(b), то выскочит ошибка # NameError: 
name 'cos' is not defined. Если мы подключим эту библиотека с помощью команды 
import math, то нам станет доступна, в том числе, функция определения cos 
перременной
"""
import math
# Функция возвращающая числу косинус числа
c=math.cos(b)
# Функция возвращающая числу квадратный корень числа
b=math.sqrt(b)
# и т.д.

 
  


































